type: object
required:
- TerminalKey
- Amount
- OrderId
properties:
  TerminalKey:
    description: |
      Идентификатор терминала. 
      Выдается продавцу банком при заведении терминала
    type: string
    maxLength: 20
    example: TinkoffBankTest
  Amount:
    description: | 
      * Сумма в копейках. Например, сумма 3руб. 12коп. это число 312
      * Параметр должен быть равен сумме всех параметров "Amount", переданных в объекте Items
      * Минимальная сумма операции с помощью СБП составляет 10 руб.
    type: number
    maxLength: 10
    example: 140000
  OrderId:
    description: Идентификатор заказа в системе продавца
    type: string
    maxLength: 36
    example: 21050
  Token:
    description: Подпись запроса
    type: string
    example: 2ED30E046136931431B5251B7C9A1EAC68DAB082203BD42676BA14A851359DF4
  Description:
    description: Описание заказа
    type: string
    maxLength: 250
    example: Подарочная карта на 1400.00 рублей
  CustomerKey:
    description: | 
      Идентификатор покупателя в системе продавца.
      Обязателен если передан атрибут Recurrent.
      Передается вместе с параметром CardId. См. метод [GetCardList](http://127.0.0.1:5500/#/paths/~1GetCardList/post) 
      Также необходим для сохранения карт на платежной форме (платежи в один клик).
    type: string
    maxLength: 36
  Recurrent:
    description: | 
      Идентификатор родительского платежа. 
      Для регистрации автоплатежа - обязателен.
    type: string
    maxLength: 1
    example: Y
  PayType:
    description: |
      Определяет тип проведения платежа – двухстадийная или одностадийная оплата.
      * "O" - одностадийная оплата,
      * "T" - двухстадийная оплата
    type: string
    enum:
      - O
      - T
  Language:  
    description: |
      Язык платежной формы.
      * ru — русский
      * en — английский. 
      Если не передан, форма откроется на русском языке 
    type: string
    maxLength: 2
  NotificationURL:
    description: |
      URL на веб-сайте продавца, куда будет отправлен
      POST запрос о статусе выполнения вызываемых методов 
      (настраивается в Личном кабинете):
      * Если параметр передан – используется его значение.
      * Если нет – значение в настройках терминала.
    type: string
    format: uri
  SuccessURL:
    description: |
      URL на веб-сайте продавца, куда будет
      переведен покупатель в случае успешной оплаты
      (настраивается в Личном кабинете):
      * Если параметр передан – используется его значение.
      * Если нет – значение в настройках терминала.
    type: string
    format: uri
  FailURL:
    description: |
      URL на веб-сайте продавца, куда будет
      переведен покупатель в случае неуспешной
      оплаты (настраивается в Личном кабинете):
      * Если параметр передан – используется его значение.
      * Если нет – значение в настройках терминала.
    type: string
    format: uri
  RedirectDueDate:
    description: |
      Cрок жизни ссылки или динамического QR-кода
      СБП (если выбран данный способ оплаты).
      Если текущая дата превышает дату, переданную в
      данном параметре, ссылка для оплаты или
      возможность платежа по QR-коду становятся
      недоступными и платёж выполнить нельзя.
      * Максимальное значение: 90 дней от текущей даты.
      * Минимальное значение: 1 минута от текущей даты.
      * Формат даты: YYYY-MM-DDTHH24:MI:SS+GMT
      * Пример даты: 2016-08-31T12:28:00+03:00
      Если не передан, принимает значение 24 часа для платежа 
      и 30 дней для счета
    type: string
    format: date-time
  DATA:
    description: |
      1. Если у терминала включена опция привязки покупателя после 
      успешной оплаты и передается параметр CustomerKey, то в передаваемых 
      параметрах DATA могут присутствовать параметры метода AddCustomer. 
      Если они присутствуют, то автоматически привязываются к покупателю.
      Например, если указать: "DATA":{"Phone":"+71234567890", "Email":"a@test.com"}, 
      к покупателю автоматически будут привязаны данные Email и телефон, 
      и они будут возвращаться при вызове метода GetCustomer.
      2. Если используется функционал сохранения карт на платежной форме, 
      то при помощи опционального параметра "DefaultCard" можно задать 
      какая карта будет выбираться по умолчанию. 
      Возможные варианты:
      * Оставить платежную форму пустой. Пример: "DATA":{"DefaultCard":"none"};
      * Заполнить данными передаваемой карты. В этом случае передается CardId. Пример: "DATA":{"DefaultCard":"894952"};
      * Заполнить данными последней сохраненной карты. Применяется, если параметр "DefaultCard" не передан, передан с некорректным значением или в значении null.
      3. При реализации подключения оплаты через Yandex Pay Web или Tinkoff Pay Web,
      необходимо обязательно передавать соотвествующие параметры в объекте Data
    oneOf:
      - type: object
        properties:
          key:
            description: any \'key\' or empty object
            example: value
      - $ref: TinkoffPay.yaml
      - $ref: YandexPay.yaml
  Receipt:
    description: JSON объект с данными чека
    oneOf: 
      - $ref: Receipt_FFD_105.yaml
      - $ref: Receipt_FFD_12.yaml
  Shops:
    description: JSON объект с данными Маркетплейса
    type: array
    items: 
      $ref: Shops.yaml
  Receipts:
    description: Массив объектов с чеками для каждого ShopCode из объекта Shops
    type: array
    items:
      $ref: Receipts.yaml
  # DOESN'T USE IN ANDROID SDK
  # Descriptor:
  #   description: Динамический дескриптор точки
  #   type: string
  # IP:
  #   description: IP-адрес покупателя
  #   type: string
  #   maxLength: 40
  # Currency:
  #   description: |
  #     Код валюты ISO 421. Если Currency передан и
  #     валюта разрешена для Продавца, транзакция
  #     будет инициирована в переданной валюте. Иначе
  #     будет использована валюта по умолчанию для
  #     данного терминала.
  #     В текущей версии допустимы только рубли - код 643
  #   type: number